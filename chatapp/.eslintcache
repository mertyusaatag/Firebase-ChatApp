[{"C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\index.js":"1","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\App.js":"2","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\auth\\Login.jsx":"3","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\auth\\SignUp.jsx":"4","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\firebase.js":"5","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\store\\store.js":"6","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\store\\rootReducer.js":"7"},{"size":1089,"mtime":1620227373538,"results":"8","hashOfConfig":"9"},{"size":186,"mtime":1620168502788,"results":"10","hashOfConfig":"9"},{"size":2575,"mtime":1620226070212,"results":"11","hashOfConfig":"9"},{"size":2607,"mtime":1620226271760,"results":"12","hashOfConfig":"9"},{"size":568,"mtime":1620226538474,"results":"13","hashOfConfig":"9"},{"size":245,"mtime":1620230138182,"results":"14","hashOfConfig":"9"},{"size":188,"mtime":1620227090382,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"1iznmpy",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"19"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"19"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\index.js",["34","35","36"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport SignUp from \"./component/auth/SignUp\";\nimport firebase from \"./firebase\"\nimport store from \"./store/store\"\nimport Login from './component/auth/Login'\nimport {\n  ReactReduxFirebaseProvider,\n  firebaseReducer\n} from 'react-redux-firebase'\n\nconst fbConfig={};\n\nconst rrfConfig = {\n  userProfile: 'users'\n}\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch\n}\n\nconst Root = () => {\n  return(\n    <Switch>\n      <Route exact path=\"/\" component={App}/>\n      <Route path=\"/signup\" component={SignUp}/>\n      <Route path=\"/login\" component={Login}/>\n    </Switch>);\n  \n}\n\n\nReactDOM.render( <Provider store={store}>\n  <ReactReduxFirebaseProvider {...rrfProps}>\n  <Router>\n    <Root/>\n    </Router>\n  </ReactReduxFirebaseProvider>\n</Provider>,document.getElementById('root'));\n\n",["37","38"],"C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\App.js",[],"C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\auth\\Login.jsx",["39"],"import React,{useEffect} from 'react'\r\nimport {Form,Segment,Button,Grid,Message} from \"semantic-ui-react\"\r\nimport {Link} from \"react-router-dom\"\r\nimport styles from \"./login.module.css\";\r\nimport {useForm} from \"react-hook-form\"\r\n\r\nconst Login = () => {\r\n    const onSubmit = (data,e) =>{\r\n        console.log(data);\r\n    }\r\n\r\n    const { register, errors, handleSubmit, setValue } = useForm();\r\n\r\n    useEffect(() => {\r\n      register({ name: \"email\" }, { required: true });\r\n      register({ name: \"password\" }, { required: true, minLength: 6 });\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div>\r\n            \r\n           <Grid textAlign=\"center\" \r\n           verticalAlign=\"middle\" \r\n           className={styles.container}>\r\n               <Grid.Column style={{maxWidth:450}}>\r\n                   <h1 className={styles.formHeader}>Chat App</h1>\r\n                   \r\n\r\n                   <Form size=\"large\" className={styles.form} onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                       <Segment>\r\n                           <Form.Input \r\n                           fluid icon=\"mail\" \r\n                           iconPosition=\"left\" \r\n                           name=\"email\" \r\n                           error={errors.email ? true : false}\r\n                           onChange={(event,{name,value})=> {\r\n                               setValue(name,value)\r\n                           }}\r\n                           placeholder=\"Email\" \r\n                           type=\"email\">   \r\n                           </Form.Input>\r\n                           <Form.Input \r\n                           fluid icon=\"lock\" \r\n                           iconPosition=\"left\" \r\n                           name=\"password\"\r\n                           error={errors.password ? true : false}\r\n                           placeholder=\"Password\" \r\n                           onChange={(event,{name,value})=> {\r\n                            setValue(name,value)\r\n                            \r\n                        }}\r\n                           type=\"password\">\r\n                            \r\n                           </Form.Input>\r\n                           \r\n\r\n                           <Button color=\"grey\" fluid size=\"large\">Giriş Yap</Button>\r\n                       </Segment>\r\n                       <Message>\r\n                           Henüz üye değil misin ? <Link to=\"/signup\">Hesap Oluştur</Link>\r\n                       </Message>\r\n                   </Form>\r\n\r\n               </Grid.Column>\r\n\r\n\r\n\r\n\r\n           </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\auth\\SignUp.jsx",["40"],"import React, { useEffect } from \"react\";\r\nimport { Form, Segment, Button, Grid, Message } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./signup.module.css\";\r\nimport { useForm } from \"react-hook-form\";\r\nconst SignUp = () => {\r\n  const onSubmit = (data, e) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const { register, errors, handleSubmit, setValue } = useForm();\r\n\r\n  useEffect(() => {\r\n    register({ name: \"username\" }, { required: true });\r\n    register({ name: \"email\" }, { required: true });\r\n    register({ name: \"password\" }, { required: true, minLength: 6 });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        textAlign=\"center\"\r\n        verticalAlign=\"middle\"\r\n        className={styles.container}\r\n      >\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <h1 className={styles.formHeader}>Chat App</h1>\r\n\r\n          <Form size=\"large\" className={styles.form} onSubmit={handleSubmit(onSubmit)}>\r\n            <Segment>\r\n              <Form.Input\r\n                fluid\r\n                icon=\"user\"\r\n                iconPosition=\"left\"\r\n                name=\"username\"\r\n                onChange={(event,{name,value})=> {\r\n                    setValue(name,value)\r\n                }}\r\n                placeholder=\"Username\"\r\n                error={errors.username ? true : false}\r\n                type=\"text\"\r\n              ></Form.Input>\r\n              <Form.Input\r\n                fluid\r\n                icon=\"mail\"\r\n                iconPosition=\"left\"\r\n                name=\"email\"\r\n                onChange={(event,{name,value})=> {\r\n                    setValue(name,value)\r\n                }}\r\n                placeholder=\"Email\"\r\n                type=\"email\"\r\n                error={errors.email ? true : false}\r\n              ></Form.Input>\r\n              <Form.Input\r\n                fluid\r\n                icon=\"lock\"\r\n                iconPosition=\"left\"\r\n                name=\"password\"\r\n                onChange={(event,{name,value})=> {\r\n                    setValue(name,value)\r\n                }}\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                error={errors.password ? true  : false}\r\n              ></Form.Input>\r\n\r\n              <Button color=\"grey\" fluid size=\"large\">\r\n                Kayıt Ol !\r\n              </Button>\r\n            </Segment>\r\n            <Message>\r\n              Zaten bir hesabın var mı? <Link to=\"/login\">Giriş yap</Link>\r\n            </Message>\r\n          </Form>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\firebase.js",[],"C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\store\\store.js",["41"],"C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\store\\rootReducer.js",[],{"ruleId":"42","severity":1,"message":"43","line":8,"column":3,"nodeType":"44","messageId":"45","endLine":8,"endColumn":11},{"ruleId":"42","severity":1,"message":"46","line":19,"column":3,"nodeType":"44","messageId":"45","endLine":19,"endColumn":18},{"ruleId":"42","severity":1,"message":"47","line":22,"column":7,"nodeType":"44","messageId":"45","endLine":22,"endColumn":15},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":17,"column":8,"nodeType":"54","endLine":17,"endColumn":10,"suggestions":"55"},{"ruleId":"52","severity":1,"message":"53","line":17,"column":6,"nodeType":"54","endLine":17,"endColumn":8,"suggestions":"56"},{"ruleId":"42","severity":1,"message":"57","line":1,"column":21,"nodeType":"44","messageId":"45","endLine":1,"endColumn":36},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'firebaseReducer' is defined but never used.","'fbConfig' is assigned a value but never used.","no-native-reassign",["58"],"no-negated-in-lhs",["59"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'register'. Either include it or remove the dependency array.","ArrayExpression",["60"],["61"],"'applyMiddleware' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},{"desc":"62","fix":"64"},"Update the dependencies array to be: [register]",{"range":"65","text":"66"},{"range":"67","text":"66"},[556,558],"[register]",[615,617]]