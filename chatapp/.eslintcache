[{"C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\index.js":"1","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\App.js":"2","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\auth\\Login.jsx":"3","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\auth\\SignUp.jsx":"4","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\firebase.js":"5","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\store\\store.js":"6","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\store\\rootReducer.js":"7","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\auth\\PrivateRoute.js":"8","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\Fallback.js":"9","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\SidePanel\\SidePanel.js":"10","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\Channels\\CreateChannelForm.js":"11","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\Channels\\ChannelList.js":"12","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\store\\reducers\\channelReducer.js":"13","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\store\\actions\\type.js":"14","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\store\\actions\\channel.js":"15","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\UserPanel\\UserPanel.js":"16","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\ChatPanel\\ChatPanel.js":"17","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\ChatPanel\\Message.js":"18"},{"size":1476,"mtime":1620248363112,"results":"19","hashOfConfig":"20"},{"size":1654,"mtime":1620341347638,"results":"21","hashOfConfig":"20"},{"size":3040,"mtime":1620248386984,"results":"22","hashOfConfig":"20"},{"size":3739,"mtime":1620248396758,"results":"23","hashOfConfig":"20"},{"size":568,"mtime":1620226538474,"results":"24","hashOfConfig":"20"},{"size":245,"mtime":1620230138182,"results":"25","hashOfConfig":"20"},{"size":273,"mtime":1620309992798,"results":"26","hashOfConfig":"20"},{"size":523,"mtime":1620248744354,"results":"27","hashOfConfig":"20"},{"size":365,"mtime":1620248730606,"results":"28","hashOfConfig":"20"},{"size":1648,"mtime":1620341045316,"results":"29","hashOfConfig":"20"},{"size":2229,"mtime":1620303475305,"results":"30","hashOfConfig":"20"},{"size":1590,"mtime":1620312599165,"results":"31","hashOfConfig":"20"},{"size":443,"mtime":1620309953983,"results":"32","hashOfConfig":"20"},{"size":59,"mtime":1620309996932,"results":"33","hashOfConfig":"20"},{"size":181,"mtime":1620309997251,"results":"34","hashOfConfig":"20"},{"size":649,"mtime":1620312552145,"results":"35","hashOfConfig":"20"},{"size":4726,"mtime":1620429109577,"results":"36","hashOfConfig":"20"},{"size":819,"mtime":1620429058731,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"1iznmpy",{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"41"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"41"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"41"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"41"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"41"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"41"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\index.js",["85","86","87","88"],"import React,{useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport SignUp from \"./component/auth/SignUp\";\nimport firebase from \"./firebase\"\nimport store from \"./store/store\"\nimport PrivateRoute from \"./component/auth/PrivateRoute\"\nimport {useHistory} from \"react-router-dom\";\nimport Login from './component/auth/Login'\nimport {\n  ReactReduxFirebaseProvider,\n  firebaseReducer\n} from 'react-redux-firebase'\n\nconst fbConfig={};\n\nconst rrfConfig = {\n  userProfile: 'users'\n}\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch\n}\n\nconst Root = () => {\n  const history = useHistory();\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        //login olmu≈ü\n        history.push(\"/\");\n      } else {\n        history.push(\"/login\");\n      }\n    });\n  }, []);\n\n  return(\n    <Switch>\n      <PrivateRoute exact path=\"/\">\n        <App/>\n      </PrivateRoute>\n      <Route path=\"/signup\" component={SignUp}/>\n      <Route path=\"/login\" component={Login}/>\n    </Switch>);\n  \n}\n\n\nReactDOM.render( <Provider store={store}>\n  <ReactReduxFirebaseProvider {...rrfProps}>\n  <Router>\n    <Root/>\n    </Router>\n  </ReactReduxFirebaseProvider>\n</Provider>,document.getElementById('root'));\n\n",["89","90"],"C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\App.js",["91","92"],"import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Grid ,Container} from \"semantic-ui-react\";\nimport SidePanel from \"./component/SidePanel/SidePanel\";\nimport ChatPanel from \"./component/ChatPanel/ChatPanel\";\n\n\nconst App = () => {\n  const currentChannel = useSelector((state) => state.channels.currentChannel);\n\n  return (\n    \n    <Grid columns=\"2\" style={{ background: \"#eee\", height: \"110vh\" }}>\n    <Grid.Row>\n      <Grid.Column width={3}>\n        <SidePanel />\n      </Grid.Column>\n\n      <Grid.Column style={{ background: \"#fff\" }} width={13}>\n        {currentChannel && <ChatPanel currentChannel={currentChannel} />}\n      </Grid.Column>\n    </Grid.Row>\n  </Grid>\n  \n\n\n  );\n};\n\nexport default App;\n\n/* <Grid columns=\"2\" style={{ background: \"#eee\", height: \"110vh\" }}>\n      <Grid.Row>\n        <Grid.Column width={3}>\n          <SidePanel />\n        </Grid.Column>\n\n        <Grid.Column style={{ background: \"#fff\" }} width={13}>\n          {currentChannel && <ChatPanel currentChannel={currentChannel} />}\n        </Grid.Column>\n      </Grid.Row>\n    </Grid> */\n{/* <Container>\n    <Row>\n    <Col xs=\"4\"> <SidePanel /> </Col>\n    <Col xs=\"8\" >\n    {currentChannel && <ChatPanel currentChannel={currentChannel} />}\n    </Col>\n  </Row>\n  </Container> */}\n\n/* {<Grid columns=\"2\" style={{ background: \"#eee\", height: \"110vh\" }}>\n      <Grid.Row>\n        <Grid.Column width={3}>\n          <SidePanel />\n        </Grid.Column>\n\n        <Grid.Column style={{ background: \"#fff\" }} width={13}>\n          {currentChannel && <ChatPanel currentChannel={currentChannel} />}\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>}\n */\n","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\auth\\Login.jsx",["93"],"import React, { useEffect,useState } from \"react\";\r\nimport { Form, Segment, Button, Grid, Message } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {useFirebase} from \"react-redux-firebase\" ;\r\nimport styles from \"./login.module.css\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst Login = () => {\r\n\r\n    const firebase = useFirebase();\r\n    const [fbErrors, setFbErrors] = useState([]);\r\n    const [submitting, setSubmitting] = useState(false);\r\n\r\n    const onSubmit = ({ email, password }, e) => {\r\n        setSubmitting(true);\r\n        setFbErrors([]);\r\n    \r\n        firebase\r\n          .login({\r\n            email,\r\n            password,\r\n          })\r\n          .then((data) => {\r\n            console.log(data);\r\n          })\r\n          .catch((error) => {\r\n            setFbErrors([{ message: error.message }]);\r\n          })\r\n          .finally(() => {\r\n            setSubmitting(false);\r\n          });\r\n      };\r\n\r\n      const displayErrors = () =>\r\n    fbErrors.map((error, index) => <p key={index}>{error.message}</p>);\r\n\r\n  const { register, errors, handleSubmit, setValue } = useForm();\r\n\r\n  useEffect(() => {\r\n    register({ name: \"email\" }, { required: true });\r\n    register({ name: \"password\" }, { required: true, minLength: 6 });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        textAlign=\"center\"\r\n        verticalAlign=\"middle\"\r\n        className={styles.container}\r\n      >\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <h1 className={styles.formHeader}>Chat App</h1>\r\n\r\n          <Form\r\n            size=\"large\"\r\n            className={styles.form}\r\n            onSubmit={handleSubmit(onSubmit)}\r\n          >\r\n            <Segment>\r\n              <Form.Input\r\n                fluid\r\n                icon=\"mail\"\r\n                iconPosition=\"left\"\r\n                name=\"email\"\r\n                error={errors.email ? true : false}\r\n                onChange={(event, { name, value }) => {\r\n                  setValue(name, value);\r\n                }}\r\n                placeholder=\"Email\"\r\n                type=\"email\"\r\n              ></Form.Input>\r\n              <Form.Input\r\n                fluid\r\n                icon=\"lock\"\r\n                iconPosition=\"left\"\r\n                name=\"password\"\r\n                error={errors.password ? true : false}\r\n                placeholder=\"Password\"\r\n                onChange={(event, { name, value }) => {\r\n                  setValue(name, value);\r\n                }}\r\n                type=\"password\"\r\n              ></Form.Input>\r\n\r\n              <Button color=\"grey\" fluid size=\"large\" disabled={submitting}>\r\n                Giri≈ü Yap\r\n              </Button>\r\n            </Segment>\r\n            </Form>\r\n            {fbErrors.length > 0 && <Message error> {displayErrors()}</Message>}\r\n            <Message>\r\n              Hen√ºz √ºye deƒüil misin ? <Link to=\"/signup\">Hesap Olu≈ütur</Link>\r\n            </Message>\r\n         \r\n        </Grid.Column>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\auth\\SignUp.jsx",["94"],"import React, { useEffect, useState } from \"react\";\r\nimport { useFirebase } from \"react-redux-firebase\";\r\nimport { Form, Segment, Button, Grid, Message } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./signup.module.css\";\r\nimport { useForm } from \"react-hook-form\";\r\nconst SignUp = () => {\r\n  const firebase = useFirebase();\r\n\r\n  const [fbErrors,setFbErrors] = useState([]);\r\n  const [submitting,setSubmitting] = useState(false);\r\n\r\n\r\n\r\n\r\n  const onSubmit = ({username,email,password}, e) => {\r\n    setSubmitting(true);\r\n    setFbErrors([]);\r\n    const[first,last] = username.split(' ');\r\n\r\n    firebase\r\n      .createUser(\r\n        {\r\n          email,\r\n          password,\r\n        },\r\n        {\r\n          name: username,\r\n          avatar: `https://ui-avatars.com/api/?name=${first}+${last}&background=random&color=fff`,\r\n        }\r\n      )\r\n      .then((user) => {\r\n        console.log(user);\r\n      })\r\n      .catch((error) => {\r\n        setFbErrors([{ message: error.message }]);\r\n      })\r\n      .finally(() => {\r\n        setSubmitting(false);\r\n      });\r\n  };\r\n\r\n\r\n  const { register, errors, handleSubmit, setValue } = useForm();\r\n\r\n  useEffect(() => {\r\n    register({ name: \"username\" }, { required: true });\r\n    register({ name: \"email\" }, { required: true });\r\n    register({ name: \"password\" }, { required: true, minLength: 6 });\r\n  }, []);\r\n\r\n\r\n  const displayErrors = () =>\r\n    fbErrors.map((error, index) => <p key={index}>{error.message}</p>);\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        textAlign=\"center\"\r\n        verticalAlign=\"middle\"\r\n        className={styles.container}\r\n      >\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <h1 className={styles.formHeader}>Chat App</h1>\r\n\r\n          <Form\r\n            size=\"large\"\r\n            className={styles.form}\r\n            onSubmit={handleSubmit(onSubmit)}\r\n          >\r\n            <Segment>\r\n              <Form.Input\r\n                fluid\r\n                icon=\"user\"\r\n                iconPosition=\"left\"\r\n                name=\"username\"\r\n                onChange={(event, { name, value }) => {\r\n                  setValue(name, value);\r\n                }}\r\n                placeholder=\"Username\"\r\n                error={errors.username ? true : false}\r\n                type=\"text\"\r\n              ></Form.Input>\r\n              <Form.Input\r\n                fluid\r\n                icon=\"mail\"\r\n                iconPosition=\"left\"\r\n                name=\"email\"\r\n                onChange={(event, { name, value }) => {\r\n                  setValue(name, value);\r\n                }}\r\n                placeholder=\"Email\"\r\n                type=\"email\"\r\n                error={errors.email ? true : false}\r\n              ></Form.Input>\r\n              <Form.Input\r\n                fluid\r\n                icon=\"lock\"\r\n                iconPosition=\"left\"\r\n                name=\"password\"\r\n                onChange={(event, { name, value }) => {\r\n                  setValue(name, value);\r\n                }}\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                error={errors.password ? true : false}\r\n              ></Form.Input>\r\n\r\n              <Button color=\"grey\" fluid size=\"large\" disabled={submitting}>\r\n                Kayƒ±t Ol !\r\n              </Button>\r\n            </Segment>\r\n            </Form>\r\n            {\r\n              fbErrors.length>0 && (\r\n                <Message error>{displayErrors()}</Message>\r\n              )\r\n            }\r\n            <Message>\r\n              Zaten bir hesabƒ±n var mƒ±? <Link to=\"/login\">Giri≈ü yap</Link>\r\n            </Message>\r\n          \r\n        </Grid.Column>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\firebase.js",[],"C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\store\\store.js",["95"],"import {createStore,applyMiddleware} from \"redux\"\r\nimport {composeWithDevTools} from \"redux-devtools-extension\"\r\nimport rootReducer from \"./rootReducer\"\r\n\r\nconst store = createStore(rootReducer,{},composeWithDevTools());\r\n\r\nexport default store;","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\store\\rootReducer.js",[],"C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\auth\\PrivateRoute.js",[],"C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\Fallback.js",["96"],"\r\nimport React from \"react\";\r\nimport { Dimmer, Loader, Image, Segment, Icon } from \"semantic-ui-react\";\r\n\r\nconst Fallback = () => (\r\n  <Segment style={{ height: \"100vh\" }}>\r\n    <Dimmer active>\r\n      <Loader />\r\n    </Dimmer>\r\n    <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\" />{\" \"}\r\n  </Segment>\r\n);\r\n\r\nexport default Fallback;","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\SidePanel\\SidePanel.js",[],"C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\Channels\\CreateChannelForm.js",["97"],"import React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Modal, Form, Button } from \"semantic-ui-react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useFirebase } from \"react-redux-firebase\";\r\n\r\nconst CreateChannelForm = ({ open, onClose, onOpen }) => {\r\n  const firebase = useFirebase();\r\n  const profile = useSelector((state) => state.firebase.profile);\r\n  const { register, errors, handleSubmit, setValue } = useForm();\r\n\r\n  useEffect(() => {\r\n    register({ name: \"name\" }, { required: true });\r\n    register({ name: \"description\" }, { required: true, minLength: 10 });\r\n  }, []);\r\n\r\n  const onSubmit = ({ name, description }) => {\r\n    firebase.push(\"channels\", {\r\n      name,\r\n      description,\r\n      createdBy: {\r\n        name: profile.name,\r\n        avatar: profile.avatar,\r\n      },\r\n    });\r\n\r\n    onClose();\r\n  };\r\n  return (\r\n    <Modal onClose={onClose} onOpen={onOpen} open={open}>\r\n      <Modal.Header>Yeni Kanal Olu≈ütur</Modal.Header>\r\n      <Modal.Content>\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <Form.Input\r\n            fluid\r\n            icon=\"mail\"\r\n            iconPosition=\"left\"\r\n            name=\"name\"\r\n            onChange={(e, { name, value }) => {\r\n              setValue(name, value);\r\n            }}\r\n            error={errors.name ? true : false}\r\n            placeholder=\"#General\"\r\n          />\r\n          <Form.Input\r\n            fluid\r\n            icon=\"lock\"\r\n            iconPosition=\"left\"\r\n            name=\"description\"\r\n            onChange={(e, { name, value }) => {\r\n              setValue(name, value);\r\n            }}\r\n            error={errors.description ? true : false}\r\n            placeholder=\"#Genel her t√ºrl√º konunun konu≈üulabileceƒüi bir kanaldƒ±r\"\r\n          />\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button color=\"black\" onClick={() => onClose()}>\r\n          Vazge√ß\r\n        </Button>\r\n        <Button\r\n          content=\"Olu≈ütur\"\r\n          labelPosition=\"right\"\r\n          icon=\"checkmark\"\r\n          positive\r\n          onClick={() => handleSubmit(onSubmit)()}\r\n        />\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateChannelForm;","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\Channels\\ChannelList.js",["98","99","100"],"import React, { useState, useEffect } from 'react'\r\nimport {useSelector,useDispatch} from \"react-redux\"\r\nimport {useFirebaseConnect,isLoaded,isEmpty} from \"react-redux-firebase\"\r\nimport {Menu} from \"semantic-ui-react\"\r\nimport {setCurrentChannel} from \"../../store/actions/channel\"\r\nimport UserPanel from \"../UserPanel/UserPanel\"\r\n\r\n\r\n\r\n\r\n\r\nconst ChannelList = () => {\r\n    const dispatch = useDispatch();\r\n    useFirebaseConnect([{path:\"channels\"}]);\r\n\r\n    const channels = useSelector((state)=> state.firebase.ordered.channels);\r\n    const currentChannel = useSelector((state) => state.channels.currentChannel);\r\n    const [mounted, setMounted] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!mounted && !isEmpty(channels)) {\r\n          const { key, value } = channels[0];\r\n          setActiveChannel({ key, ...value });\r\n          setMounted(true);\r\n        }\r\n      }, [isLoaded(channels)]);\r\n    \r\n      const setActiveChannel = (channel) => {\r\n        dispatch(setCurrentChannel(channel));\r\n      };\r\n\r\n    if(!isLoaded(channels))\r\n    {\r\n        return \"loading channels..\";\r\n    }\r\n    if(isEmpty(channels))\r\n    {\r\n        return \"There is no channels..\";\r\n    }\r\n    return (\r\n        <Menu.Menu>\r\n        {channels.map(({ key, value }) => (\r\n          <Menu.Item\r\n            key={key}\r\n            name={value?.name}\r\n            as=\"a\"\r\n            icon=\"hashtag\"\r\n            active={currentChannel?.key === key}\r\n            onClick={() => setActiveChannel({ key, ...value })}\r\n          />\r\n        ))}\r\n      </Menu.Menu>\r\n    )\r\n}\r\n\r\nexport default ChannelList\r\n","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\store\\reducers\\channelReducer.js",["101"],"import * as types from \"../actions/type\";\r\n\r\nconst initalState = {\r\n    currentChannel:null,\r\n\r\n}\r\n\r\n\r\n\r\nexport default (state=initalState,action) => {\r\n    switch (action.type) {\r\n        case types.SET_CURRENT_CHANNEL:\r\n            return {\r\n                ...state,\r\n                currentChannel: action.payload\r\n            }\r\n            \r\n    \r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\store\\actions\\type.js",[],"C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\store\\actions\\channel.js",[],"C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\UserPanel\\UserPanel.js",["102"],"import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useFirebase } from \"react-redux-firebase\";\r\nimport { Icon } from \"semantic-ui-react\";\r\n\r\nconst UserPanel = () => {\r\n  const firebase = useFirebase();\r\n\r\n  const profile = useSelector((state) => state.firebase.profile);\r\n\r\n  const signOut = () => {\r\n    firebase.logout();\r\n  };\r\n  return (\r\n    <div\r\n      style={{ padding: 2, display: \"flex\", justifyContent: \"space-between\" }}\r\n    >\r\n      <p>{profile?.name}</p>\r\n      <div>\r\n        <Icon name=\"sign out\" onClick={() => signOut()} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPanel;","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\ChatPanel\\ChatPanel.js",["103","104","105"],"C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\ChatPanel\\Message.js",["106"],{"ruleId":"107","severity":1,"message":"108","line":8,"column":3,"nodeType":"109","messageId":"110","endLine":8,"endColumn":11},{"ruleId":"107","severity":1,"message":"111","line":21,"column":3,"nodeType":"109","messageId":"110","endLine":21,"endColumn":18},{"ruleId":"107","severity":1,"message":"112","line":24,"column":7,"nodeType":"109","messageId":"110","endLine":24,"endColumn":15},{"ruleId":"113","severity":1,"message":"114","line":48,"column":6,"nodeType":"115","endLine":48,"endColumn":8,"suggestions":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"107","severity":1,"message":"121","line":3,"column":16,"nodeType":"109","messageId":"110","endLine":3,"endColumn":25},{"ruleId":"122","severity":1,"message":"123","line":43,"column":1,"nodeType":"124","messageId":"125","endLine":50,"endColumn":19},{"ruleId":"113","severity":1,"message":"126","line":42,"column":6,"nodeType":"115","endLine":42,"endColumn":8,"suggestions":"127"},{"ruleId":"113","severity":1,"message":"126","line":50,"column":6,"nodeType":"115","endLine":50,"endColumn":8,"suggestions":"128"},{"ruleId":"107","severity":1,"message":"129","line":1,"column":21,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"130","line":3,"column":42,"nodeType":"109","messageId":"110","endLine":3,"endColumn":46},{"ruleId":"113","severity":1,"message":"126","line":15,"column":6,"nodeType":"115","endLine":15,"endColumn":8,"suggestions":"131"},{"ruleId":"107","severity":1,"message":"132","line":6,"column":8,"nodeType":"109","messageId":"110","endLine":6,"endColumn":17},{"ruleId":"113","severity":1,"message":"133","line":26,"column":10,"nodeType":"115","endLine":26,"endColumn":30,"suggestions":"134"},{"ruleId":"113","severity":1,"message":"135","line":26,"column":11,"nodeType":"136","endLine":26,"endColumn":29},{"ruleId":"137","severity":1,"message":"138","line":10,"column":1,"nodeType":"139","endLine":24,"endColumn":2},{"ruleId":"107","severity":1,"message":"140","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":25},{"ruleId":"107","severity":1,"message":"141","line":10,"column":3,"nodeType":"109","messageId":"110","endLine":10,"endColumn":14},{"ruleId":"107","severity":1,"message":"142","line":14,"column":28,"nodeType":"109","messageId":"110","endLine":14,"endColumn":36},{"ruleId":"107","severity":1,"message":"143","line":14,"column":37,"nodeType":"109","messageId":"110","endLine":14,"endColumn":44},{"ruleId":"107","severity":1,"message":"144","line":3,"column":10,"nodeType":"109","messageId":"110","endLine":3,"endColumn":16},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'firebaseReducer' is defined but never used.","'fbConfig' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["145"],"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"'Container' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","React Hook useEffect has a missing dependency: 'register'. Either include it or remove the dependency array.",["148"],["149"],"'applyMiddleware' is defined but never used.","'Icon' is defined but never used.",["150"],"'UserPanel' is defined but never used.","React Hook useEffect has missing dependencies: 'channels', 'mounted', and 'setActiveChannel'. Either include them or remove the dependency array.",["151"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","'StepContent' is defined but never used.","'isLoaded' is defined but never used.","'isEmpty' is defined but never used.","'Button' is defined but never used.",{"desc":"152","fix":"153"},"no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},{"desc":"154","fix":"156"},{"desc":"154","fix":"157"},{"desc":"158","fix":"159"},"Update the dependencies array to be: [history]",{"range":"160","text":"161"},"Update the dependencies array to be: [register]",{"range":"162","text":"163"},{"range":"164","text":"163"},{"range":"165","text":"163"},"Update the dependencies array to be: [channels, mounted, setActiveChannel]",{"range":"166","text":"167"},[1051,1053],"[history]",[1287,1289],"[register]",[1393,1395],[629,631],[883,903],"[channels, mounted, setActiveChannel]"]