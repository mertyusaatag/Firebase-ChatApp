[{"C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\index.js":"1","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\App.js":"2","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\auth\\Login.jsx":"3","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\auth\\SignUp.jsx":"4","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\firebase.js":"5","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\store\\store.js":"6","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\store\\rootReducer.js":"7","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\auth\\PrivateRoute.js":"8","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\Fallback.js":"9","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\SidePanel\\SidePanel.js":"10","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\Channels\\CreateChannelForm.js":"11","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\Channels\\ChannelList.js":"12","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\store\\reducers\\channelReducer.js":"13","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\store\\actions\\type.js":"14","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\store\\actions\\channel.js":"15","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\UserPanel\\UserPanel.js":"16","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\ChatPanel\\ChatPanel.js":"17"},{"size":1476,"mtime":1620248363112,"results":"18","hashOfConfig":"19"},{"size":698,"mtime":1620314708587,"results":"20","hashOfConfig":"19"},{"size":3040,"mtime":1620248386984,"results":"21","hashOfConfig":"19"},{"size":3739,"mtime":1620248396758,"results":"22","hashOfConfig":"19"},{"size":568,"mtime":1620226538474,"results":"23","hashOfConfig":"19"},{"size":245,"mtime":1620230138182,"results":"24","hashOfConfig":"19"},{"size":273,"mtime":1620309992798,"results":"25","hashOfConfig":"19"},{"size":523,"mtime":1620248744354,"results":"26","hashOfConfig":"19"},{"size":365,"mtime":1620248730606,"results":"27","hashOfConfig":"19"},{"size":1645,"mtime":1620312649726,"results":"28","hashOfConfig":"19"},{"size":2229,"mtime":1620303475305,"results":"29","hashOfConfig":"19"},{"size":1590,"mtime":1620312599165,"results":"30","hashOfConfig":"19"},{"size":443,"mtime":1620309953983,"results":"31","hashOfConfig":"19"},{"size":59,"mtime":1620309996932,"results":"32","hashOfConfig":"19"},{"size":181,"mtime":1620309997251,"results":"33","hashOfConfig":"19"},{"size":649,"mtime":1620312552145,"results":"34","hashOfConfig":"19"},{"size":583,"mtime":1620315053177,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"1iznmpy",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"39"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"39"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"39"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"39"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\index.js",["77","78","79","80"],"import React,{useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport SignUp from \"./component/auth/SignUp\";\nimport firebase from \"./firebase\"\nimport store from \"./store/store\"\nimport PrivateRoute from \"./component/auth/PrivateRoute\"\nimport {useHistory} from \"react-router-dom\";\nimport Login from './component/auth/Login'\nimport {\n  ReactReduxFirebaseProvider,\n  firebaseReducer\n} from 'react-redux-firebase'\n\nconst fbConfig={};\n\nconst rrfConfig = {\n  userProfile: 'users'\n}\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch\n}\n\nconst Root = () => {\n  const history = useHistory();\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        //login olmuş\n        history.push(\"/\");\n      } else {\n        history.push(\"/login\");\n      }\n    });\n  }, []);\n\n  return(\n    <Switch>\n      <PrivateRoute exact path=\"/\">\n        <App/>\n      </PrivateRoute>\n      <Route path=\"/signup\" component={SignUp}/>\n      <Route path=\"/login\" component={Login}/>\n    </Switch>);\n  \n}\n\n\nReactDOM.render( <Provider store={store}>\n  <ReactReduxFirebaseProvider {...rrfProps}>\n  <Router>\n    <Root/>\n    </Router>\n  </ReactReduxFirebaseProvider>\n</Provider>,document.getElementById('root'));\n\n",["81","82"],"C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\App.js",[],"C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\auth\\Login.jsx",["83"],"import React, { useEffect,useState } from \"react\";\r\nimport { Form, Segment, Button, Grid, Message } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {useFirebase} from \"react-redux-firebase\" ;\r\nimport styles from \"./login.module.css\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst Login = () => {\r\n\r\n    const firebase = useFirebase();\r\n    const [fbErrors, setFbErrors] = useState([]);\r\n    const [submitting, setSubmitting] = useState(false);\r\n\r\n    const onSubmit = ({ email, password }, e) => {\r\n        setSubmitting(true);\r\n        setFbErrors([]);\r\n    \r\n        firebase\r\n          .login({\r\n            email,\r\n            password,\r\n          })\r\n          .then((data) => {\r\n            console.log(data);\r\n          })\r\n          .catch((error) => {\r\n            setFbErrors([{ message: error.message }]);\r\n          })\r\n          .finally(() => {\r\n            setSubmitting(false);\r\n          });\r\n      };\r\n\r\n      const displayErrors = () =>\r\n    fbErrors.map((error, index) => <p key={index}>{error.message}</p>);\r\n\r\n  const { register, errors, handleSubmit, setValue } = useForm();\r\n\r\n  useEffect(() => {\r\n    register({ name: \"email\" }, { required: true });\r\n    register({ name: \"password\" }, { required: true, minLength: 6 });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        textAlign=\"center\"\r\n        verticalAlign=\"middle\"\r\n        className={styles.container}\r\n      >\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <h1 className={styles.formHeader}>Chat App</h1>\r\n\r\n          <Form\r\n            size=\"large\"\r\n            className={styles.form}\r\n            onSubmit={handleSubmit(onSubmit)}\r\n          >\r\n            <Segment>\r\n              <Form.Input\r\n                fluid\r\n                icon=\"mail\"\r\n                iconPosition=\"left\"\r\n                name=\"email\"\r\n                error={errors.email ? true : false}\r\n                onChange={(event, { name, value }) => {\r\n                  setValue(name, value);\r\n                }}\r\n                placeholder=\"Email\"\r\n                type=\"email\"\r\n              ></Form.Input>\r\n              <Form.Input\r\n                fluid\r\n                icon=\"lock\"\r\n                iconPosition=\"left\"\r\n                name=\"password\"\r\n                error={errors.password ? true : false}\r\n                placeholder=\"Password\"\r\n                onChange={(event, { name, value }) => {\r\n                  setValue(name, value);\r\n                }}\r\n                type=\"password\"\r\n              ></Form.Input>\r\n\r\n              <Button color=\"grey\" fluid size=\"large\" disabled={submitting}>\r\n                Giriş Yap\r\n              </Button>\r\n            </Segment>\r\n            </Form>\r\n            {fbErrors.length > 0 && <Message error> {displayErrors()}</Message>}\r\n            <Message>\r\n              Henüz üye değil misin ? <Link to=\"/signup\">Hesap Oluştur</Link>\r\n            </Message>\r\n         \r\n        </Grid.Column>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\auth\\SignUp.jsx",["84"],"import React, { useEffect, useState } from \"react\";\r\nimport { useFirebase } from \"react-redux-firebase\";\r\nimport { Form, Segment, Button, Grid, Message } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./signup.module.css\";\r\nimport { useForm } from \"react-hook-form\";\r\nconst SignUp = () => {\r\n  const firebase = useFirebase();\r\n\r\n  const [fbErrors,setFbErrors] = useState([]);\r\n  const [submitting,setSubmitting] = useState(false);\r\n\r\n\r\n\r\n\r\n  const onSubmit = ({username,email,password}, e) => {\r\n    setSubmitting(true);\r\n    setFbErrors([]);\r\n    const[first,last] = username.split(' ');\r\n\r\n    firebase\r\n      .createUser(\r\n        {\r\n          email,\r\n          password,\r\n        },\r\n        {\r\n          name: username,\r\n          avatar: `https://ui-avatars.com/api/?name=${first}+${last}&background=random&color=fff`,\r\n        }\r\n      )\r\n      .then((user) => {\r\n        console.log(user);\r\n      })\r\n      .catch((error) => {\r\n        setFbErrors([{ message: error.message }]);\r\n      })\r\n      .finally(() => {\r\n        setSubmitting(false);\r\n      });\r\n  };\r\n\r\n\r\n  const { register, errors, handleSubmit, setValue } = useForm();\r\n\r\n  useEffect(() => {\r\n    register({ name: \"username\" }, { required: true });\r\n    register({ name: \"email\" }, { required: true });\r\n    register({ name: \"password\" }, { required: true, minLength: 6 });\r\n  }, []);\r\n\r\n\r\n  const displayErrors = () =>\r\n    fbErrors.map((error, index) => <p key={index}>{error.message}</p>);\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        textAlign=\"center\"\r\n        verticalAlign=\"middle\"\r\n        className={styles.container}\r\n      >\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <h1 className={styles.formHeader}>Chat App</h1>\r\n\r\n          <Form\r\n            size=\"large\"\r\n            className={styles.form}\r\n            onSubmit={handleSubmit(onSubmit)}\r\n          >\r\n            <Segment>\r\n              <Form.Input\r\n                fluid\r\n                icon=\"user\"\r\n                iconPosition=\"left\"\r\n                name=\"username\"\r\n                onChange={(event, { name, value }) => {\r\n                  setValue(name, value);\r\n                }}\r\n                placeholder=\"Username\"\r\n                error={errors.username ? true : false}\r\n                type=\"text\"\r\n              ></Form.Input>\r\n              <Form.Input\r\n                fluid\r\n                icon=\"mail\"\r\n                iconPosition=\"left\"\r\n                name=\"email\"\r\n                onChange={(event, { name, value }) => {\r\n                  setValue(name, value);\r\n                }}\r\n                placeholder=\"Email\"\r\n                type=\"email\"\r\n                error={errors.email ? true : false}\r\n              ></Form.Input>\r\n              <Form.Input\r\n                fluid\r\n                icon=\"lock\"\r\n                iconPosition=\"left\"\r\n                name=\"password\"\r\n                onChange={(event, { name, value }) => {\r\n                  setValue(name, value);\r\n                }}\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                error={errors.password ? true : false}\r\n              ></Form.Input>\r\n\r\n              <Button color=\"grey\" fluid size=\"large\" disabled={submitting}>\r\n                Kayıt Ol !\r\n              </Button>\r\n            </Segment>\r\n            </Form>\r\n            {\r\n              fbErrors.length>0 && (\r\n                <Message error>{displayErrors()}</Message>\r\n              )\r\n            }\r\n            <Message>\r\n              Zaten bir hesabın var mı? <Link to=\"/login\">Giriş yap</Link>\r\n            </Message>\r\n          \r\n        </Grid.Column>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\firebase.js",[],"C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\store\\store.js",["85"],"import {createStore,applyMiddleware} from \"redux\"\r\nimport {composeWithDevTools} from \"redux-devtools-extension\"\r\nimport rootReducer from \"./rootReducer\"\r\n\r\nconst store = createStore(rootReducer,{},composeWithDevTools());\r\n\r\nexport default store;","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\store\\rootReducer.js",[],"C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\auth\\PrivateRoute.js",[],"C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\Fallback.js",["86"],"\r\nimport React from \"react\";\r\nimport { Dimmer, Loader, Image, Segment, Icon } from \"semantic-ui-react\";\r\n\r\nconst Fallback = () => (\r\n  <Segment style={{ height: \"100vh\" }}>\r\n    <Dimmer active>\r\n      <Loader />\r\n    </Dimmer>\r\n    <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\" />{\" \"}\r\n  </Segment>\r\n);\r\n\r\nexport default Fallback;","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\SidePanel\\SidePanel.js",[],"C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\Channels\\CreateChannelForm.js",["87"],"C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\Channels\\ChannelList.js",["88","89","90"],"C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\store\\reducers\\channelReducer.js",["91"],"C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\store\\actions\\type.js",[],"C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\store\\actions\\channel.js",[],"C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\UserPanel\\UserPanel.js",["92"],"import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useFirebase } from \"react-redux-firebase\";\r\nimport { Icon } from \"semantic-ui-react\";\r\n\r\nconst UserPanel = () => {\r\n  const firebase = useFirebase();\r\n\r\n  const profile = useSelector((state) => state.firebase.profile);\r\n\r\n  const signOut = () => {\r\n    firebase.logout();\r\n  };\r\n  return (\r\n    <div\r\n      style={{ padding: 2, display: \"flex\", justifyContent: \"space-between\" }}\r\n    >\r\n      <p>{profile?.name}</p>\r\n      <div>\r\n        <Icon name=\"sign out\" onClick={() => signOut()} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPanel;","C:\\Users\\merta\\Firebase-Mern-ChatApp\\chatapp\\src\\component\\ChatPanel\\ChatPanel.js",["93","94","95","96","97","98"],{"ruleId":"99","severity":1,"message":"100","line":8,"column":3,"nodeType":"101","messageId":"102","endLine":8,"endColumn":11},{"ruleId":"99","severity":1,"message":"103","line":21,"column":3,"nodeType":"101","messageId":"102","endLine":21,"endColumn":18},{"ruleId":"99","severity":1,"message":"104","line":24,"column":7,"nodeType":"101","messageId":"102","endLine":24,"endColumn":15},{"ruleId":"105","severity":1,"message":"106","line":48,"column":6,"nodeType":"107","endLine":48,"endColumn":8,"suggestions":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"105","severity":1,"message":"113","line":42,"column":6,"nodeType":"107","endLine":42,"endColumn":8,"suggestions":"114"},{"ruleId":"105","severity":1,"message":"113","line":50,"column":6,"nodeType":"107","endLine":50,"endColumn":8,"suggestions":"115"},{"ruleId":"99","severity":1,"message":"116","line":1,"column":21,"nodeType":"101","messageId":"102","endLine":1,"endColumn":36},{"ruleId":"99","severity":1,"message":"117","line":3,"column":42,"nodeType":"101","messageId":"102","endLine":3,"endColumn":46},{"ruleId":"105","severity":1,"message":"113","line":15,"column":6,"nodeType":"107","endLine":15,"endColumn":8,"suggestions":"118"},{"ruleId":"99","severity":1,"message":"119","line":6,"column":8,"nodeType":"101","messageId":"102","endLine":6,"endColumn":17},{"ruleId":"105","severity":1,"message":"120","line":26,"column":10,"nodeType":"107","endLine":26,"endColumn":30,"suggestions":"121"},{"ruleId":"105","severity":1,"message":"122","line":26,"column":11,"nodeType":"123","endLine":26,"endColumn":29},{"ruleId":"124","severity":1,"message":"125","line":10,"column":1,"nodeType":"126","endLine":24,"endColumn":2},{"ruleId":"99","severity":1,"message":"127","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":25},{"ruleId":"99","severity":1,"message":"128","line":2,"column":30,"nodeType":"101","messageId":"102","endLine":2,"endColumn":37},{"ruleId":"99","severity":1,"message":"129","line":2,"column":38,"nodeType":"101","messageId":"102","endLine":2,"endColumn":42},{"ruleId":"99","severity":1,"message":"130","line":2,"column":43,"nodeType":"101","messageId":"102","endLine":2,"endColumn":48},{"ruleId":"99","severity":1,"message":"131","line":2,"column":49,"nodeType":"101","messageId":"102","endLine":2,"endColumn":55},{"ruleId":"99","severity":1,"message":"132","line":4,"column":9,"nodeType":"101","messageId":"102","endLine":4,"endColumn":20},{"ruleId":"99","severity":1,"message":"133","line":5,"column":9,"nodeType":"101","messageId":"102","endLine":5,"endColumn":20},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'firebaseReducer' is defined but never used.","'fbConfig' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["134"],"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"React Hook useEffect has a missing dependency: 'register'. Either include it or remove the dependency array.",["137"],["138"],"'applyMiddleware' is defined but never used.","'Icon' is defined but never used.",["139"],"'UserPanel' is defined but never used.","React Hook useEffect has missing dependencies: 'channels', 'mounted', and 'setActiveChannel'. Either include them or remove the dependency array.",["140"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","'Comment' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'useFirebase' is defined but never used.","'useSelector' is defined but never used.",{"desc":"141","fix":"142"},"no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},{"desc":"143","fix":"145"},{"desc":"143","fix":"146"},{"desc":"147","fix":"148"},"Update the dependencies array to be: [history]",{"range":"149","text":"150"},"Update the dependencies array to be: [register]",{"range":"151","text":"152"},{"range":"153","text":"152"},{"range":"154","text":"152"},"Update the dependencies array to be: [channels, mounted, setActiveChannel]",{"range":"155","text":"156"},[1051,1053],"[history]",[1287,1289],"[register]",[1393,1395],[629,631],[883,903],"[channels, mounted, setActiveChannel]"]